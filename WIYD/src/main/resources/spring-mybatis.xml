<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
                        http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">

	 <!-- 自动扫描dao和service包(自动注入) -->

	<context:component-scan base-package="com.spr.web.system.dao.*" />
	<context:component-scan base-package="com.spr.web.system.service.*" />
	
	<context:component-scan base-package="com.spr.web.Investment.dao.*" />
	<context:component-scan base-package="com.spr.web.Investment.service.*" />
	
	<context:component-scan base-package="com.spr.web.file.dao.*" />
	<context:component-scan base-package="com.spr.web.file.service.*" />
	
	<context:component-scan base-package="com.spr.web.grade.dao.*" />
	<context:component-scan base-package="com.spr.web.grade.service.*" />
	
	<context:component-scan base-package="com.spr.web.document.dao.*" />
	<context:component-scan base-package="com.spr.web.document.service.*" />
	
	<context:component-scan base-package="com.spr.web.record.dao.*" />
	<context:component-scan base-package="com.spr.web.record.service.*" />
	
	<context:component-scan base-package="com.spr.core.common.dao.*" />

	
	<context:component-scan base-package="com.spr.core.timer.*" />
	
	
	<context:property-placeholder location="classpath:dbConfig.properties" ignore-unresolvable="true" />                        
   
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
 	<aop:aspectj-autoproxy  />
	<!-- 日志切面bean 
	<bean id="LoggerAspect" class="com.spr.core.spring.aop.LoggerAspect"/>-->

   
    
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="mergeSql" value="true" />
		<property name="slowSqlMillis" value="5000" />
		<property name="logSlowSql" value="true" />
	</bean>
   
   
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
      <property name="dbType" value="oracle" />
   </bean>
   
   
    <bean id="myStatLogger" class="com.spr.core.logger.stat.MyStatLogger" />
   
   <!-- 数据源 -->
   <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
      <property name="url" value="${jdbcUrl}" />
      <property name="username" value="${db_user}" />
      <property name="password" value="${db_pwd}" />
        
      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="${initialPoolSize}" />
      <property name="minIdle" value="${minPoolSize}" /> 
      <property name="maxActive" value="${maxPoolSize}" />
   
      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="${checkoutTimeout}" />
   
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />
   
      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />
    
      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />
   
      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      <property name="poolPreparedStatements" value="true" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
   
      <!-- 配置监控统计拦截的filters -->     
      <property name="filters" value="stat" />
		<property name="proxyFilters">
		<list>
			<ref bean="stat-filter" />
			<ref bean="wall-filter" />
		</list>
	  </property>
	  
	  <property name="statLogger" ref="myStatLogger" />
  </bean>
    

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" >
		   <list>
		     <value>classpath:com/spr/web/system/dao/*.xml</value>
		     <value>classpath:com/spr/web/file/dao/*.xml</value>
		     <value>classpath:com/spr/web/grade/dao/*.xml</value>
		     <value>classpath:com/spr/web/document/dao/*.xml</value>
		     <value>classpath:com/spr/web/record/dao/*.xml</value>		     
		   </list>
		
		
		</property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.spr.web.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean> 

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	

	
	
	<bean id="mapper" class="org.dozer.spring.DozerBeanMapperFactoryBean">
		<property name="mappingFiles">
			<list>
				<value>classpath*:com/wb/web/*/dto/*/dozer_*.xml</value>
			</list>
		</property>
	</bean>
	
	

</beans>